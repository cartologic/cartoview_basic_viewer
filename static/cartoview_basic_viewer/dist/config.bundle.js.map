{"version":3,"sources":[],"names":[],"mappings":"","file":"config.bundle.js","sourceRoot":""}otstrap","webpack:///./src/components/edit/ToolConfiguration.jsx","webpack:///./src/containers/EditPage.jsx","webpack:///./src/components/edit/AutoCompleteInput.jsx","webpack:///./src/EditPageEntry.jsx","webpack:///./src/components/edit/MapSelector.jsx","webpack:///./src/components/edit/Access.jsx","webpack:///./src/containers/forms.jsx","webpack:///./src/components/edit/GeocodingConfiguration.jsx","webpack:///./src/components/edit/AppConfiguration.jsx","webpack:///./src/components/edit/EditPage.jsx","webpack:///./src/containers/staticMethods.jsx","webpack:///./src/components/edit/Bookmarks.jsx","webpack:///./src/components/edit/MapCard.jsx","webpack:///./src/components/edit/InfoModal.jsx"],"names":["root","factory","exports","module","define","amd","window","webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","oldJsonpFunction","slice","_staticMethods","_forms","options","fields","showZoombar","label","showLayerSwitcher","showBaseMapSwitcher","showLegend","Form","form","ToolConfiguration","props","_classCallCheck3","default","this","_this","_possibleConstructorReturn3","__proto__","_getPrototypeOf2","_initialiseProps","state","getFormValue","nextProps","_props","config","instanceId","setState","_this2","_react2","createElement","ref","formRef","type","toolFormSchema","onChange","React","Component","getComponentValue","_this3","getValue","enableHistory","getPropertyFromConfig","enableFeatureTable","showExportMap","newValue","propTypes","PropTypes","number","_utils","EditPage","urls","configService","Configuration","proxy","URLS","maps","userMaps","selectedMap","map","loading","totalMaps","layerAttributes","title","abstract","tags","keywords","saving","errors","profiles","id","searchEnabled","getMaps","getKeywords","getProfiles","_EditPage2","childrenProps","getChildrenProps","UserMapsChanged","offset","arguments","undefined","limit","username","url","getMapApiURL","MapsAPI","doGet","then","objects","meta","total_count","searchMapById","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_getIterator3","next","done","err","return","handleSearchMode","bool","search","text","_props2","getMapApiSearchURL","getAttributes","typename","getParamterizedURL","layer__typename","keywordsAPI","profilesAPI","getTags","tagsAPI","selectMap","setStepRef","getSteps","_state","steps","component","MapSelector","hasErrors","AppConfiguration","allKeywords","AppAccess","Bookmarks","GeocodingConfiguration","save","error","hasError","toArray","arrayOfStructs","arr","forEach","struct","prepareServerData","generalStep","finalConfiguration","toolsStep","bookmarksStep","geocodingStep","access","accessConfigurationStep","sendConfiguration","_state2","editURL","newURL","_stringify2","doPost","Content-Type","showComponentsErrors","callBack","step","index","validate","isRequired","string","_reactSelect","toolTipId","getKeywordsTemplate","locals","style","paddingTop","paddingBottom","className","AsyncCreatable","_extends3","inputProps","loadOptions","multi","deleteRemoves","resetValue","placeholder","message","help","data-tip","data-for","aria-hidden","_reactTooltip2","getContent","place","effect","getAttributesTemplate","_reactSelect2","required","_helpers","_reactDom","Viewer","domId","fetch","appInstance","method","credentials","headers","Headers","X-CSRFToken","getCRSFToken","response","json","loadConfig","res","currentlayer","layer","render","document","getElementById","global","_MapCard","MyResourcesRadioButtons","checked","selectedOption","func","UserMapSwitch","Loader","_reactSpinkit2","color","SearchBox","searchByTitle","aria-describedby","handlePageClick","selected","event","_this$props","target","nextState","MapCard","href","newMap","_reactPaginate2","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","array","_AutoCompleteInput","accessFormSchema","getFormOptions","flattenedUsers","users","obj","getFormValueForSaving","_keys2","attr","attributeValue","viewAccess","metadataAccess","deleteAccess","changeAccess","whoCanView","getSelectOptions","whoCanChangeMetadata","whoCanDelete","whoCanChangeConfiguration","userOptions","Textbox","template","_tcombForm","generalFormSchema","selectKeywordItem","String","maybe","list","selectUserItem","bookmarksFormSchema","extent","bookmarks","Boolean","geocodingFormSchema","boundlessGeoCodingEnabled","geocodingKey","disabled","getKeywordsOptions","input","callback","keywordsOptions","keyword","complete","keywordsToOptions","ActionBar","extraProps","onClick","viewURL","Tabs","getTabClassName","checkIfDisabled","getContentClassName","data-toggle","ComponentRef","AppBar","handleHideModal","EditPageComponent","showModal","check","_classnames2","active","nav-item","flex-element","tab-pane fade in","_InfoModal2","_isURL","defaultValue","propertyValue","checkURL","_isURL2","checkImageSrc","src","good","bad","img","Image","onload","onerror","item","BasicViewerHelper","getMap","showMap","mapDiv","hidden","addBookmark","bookmark","htmlFor","onDescriptionChange","description","removeBookmark","componentDidMount","setTarget","updateSize","newBookmarks","getView","calculateExtent","join","editedOne","_reactImage2","thumbnail_url","noImage","loader","owner__username","mapDetails","_react","InfoModal","$","modal","on","modalRef","tabIndex","role","data-dismiss","aria-label"],"mappings":"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","file":"config.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"config\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"config\"] = factory();\n\telse\n\t\troot[\"config\"] = factory();\n})(window, function() {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/cartoview_basic_viewer/dist/\";\n\n \tvar jsonpArray = window[\"webpackJsonp_name_\"] = window[\"webpackJsonp_name_\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"TZsX\",0,4]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { getPropertyFromConfig } from 'Source/containers/staticMethods'\nimport t from 'tcomb-form'\nimport { toolFormSchema } from 'Source/containers/forms'\nconst options = {\n    fields: {\n        showZoombar: {\n            label: \"Zoom Bar\"\n        },\n        showLayerSwitcher: {\n            label: \"Layer Switcher\"\n        },\n        showBaseMapSwitcher: {\n            showBaseMapSwitcher: \"Base Map Switcher\"\n        },\n        showLegend: {\n            label: \"Legend\"\n        }\n    }\n}\nconst Form = t.form.Form\nexport default class ToolConfiguration extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: this.getFormValue(this.props)\n        }\n    }\n    getComponentValue = () => {\n        return this.form.getValue()\n    }\n    getFormValue = (props) => {\n        const { config } = props\n        const value = {\n            enableHistory: getPropertyFromConfig(config,\n                'enableHistory', true),\n            enableFeatureTable: getPropertyFromConfig(config,\n                'enableFeatureTable', true),\n            showZoombar: getPropertyFromConfig(config,\n                'showZoombar', true),\n            showLayerSwitcher: getPropertyFromConfig(config,\n                'showLayerSwitcher', true),\n            showExportMap: getPropertyFromConfig(config,\n                'showExportMap', true),\n            showLegend: getPropertyFromConfig(config,\n                'showLegend', true)\n        }\n        return value\n    }\n    componentWillReceiveProps(nextProps) {\n        const { config, instanceId } = this.props\n        if (config && !instanceId) {\n            this.setState({ value: this.getFormValue(nextProps) })\n        }\n    }\n    onChange = (newValue) => {\n        this.setState({ value: newValue })\n    }\n    render() {\n        return (\n            <div>\n                <h3>{\"Navigation Tools\"}</h3>\n                <Form\n                    ref={(formRef) => this.form = formRef}\n                    value={this.state.value}\n                    type={toolFormSchema()}\n                    onChange={this.onChange}\n                    options={options} />\n            </div>\n        )\n    }\n}\nToolConfiguration.propTypes = {\n    config: PropTypes.object,\n    instanceId: PropTypes.number\n}\n","import 'Source/css/app.css'\nimport 'react-select/dist/react-select.min.css'\n\nimport { doGet, doPost } from 'cartoview-sdk/utils/utils'\n\nimport AppAccess from 'Source/components/edit/Access'\nimport AppConfiguration from 'Source/components/edit/AppConfiguration'\nimport Bookmarks from 'Source/components/edit/Bookmarks'\nimport Configuration from 'cartoview-sdk/services/Configuration'\nimport EditPageComponent from 'Source/components/edit/EditPage'\nimport GeocodingConfiguration from 'Source/components/edit/GeocodingConfiguration'\nimport MapSelector from 'Source/components/edit/MapSelector'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport ToolConfiguration from 'Source/components/edit/ToolConfiguration'\nimport URLS from 'cartoview-sdk/urls/urls'\n\nconst LIMIT = 9\nclass EditPage extends React.Component {\n    constructor(props) {\n        super(props)\n        const { urls } = this.props\n\n        this.configService = new Configuration(urls.proxy)\n        this.urls = new URLS(urls.proxy)\n        const { config } = this.props\n        this.state = {\n            maps: [],\n            userMaps: true,\n            selectedMap: config ? config.map : null,\n            loading: false,\n            totalMaps: 0,\n            layerAttributes: [],\n            title: config ? config.title : null,\n            abstract: config ? config.abstract : null,\n            config: config ? config.config : null,\n            tags: [],\n            keywords: [],\n            saving: false,\n            errors: [],\n            profiles: [],\n            instanceId: config ? config.id : null,\n            searchEnabled: false\n        }\n    }\n    componentWillMount() {\n        this.getMaps()\n        this.getKeywords()\n        this.getProfiles()\n    }\n    UserMapsChanged = () => {\n        const { userMaps } = this.state\n        this.setState({ userMaps: !userMaps }, this.getMaps)\n    }\n    getMaps = (offset = 0, limit = LIMIT) => {\n        this.setState({ loading: true })\n        const { username, urls } = this.props\n        const { userMaps } = this.state\n        const url = this.configService.getMapApiURL(urls.MapsAPI, username, userMaps, limit,\n            offset)\n        doGet(url).then(result => {\n            this.setState({\n                maps: result.objects,\n                loading: false,\n                totalMaps: result.meta.total_count\n            })\n        })\n    }\n    searchMapById = (id) => {\n        const { maps } = this.state\n        let result = null\n        for (let map of maps) {\n            if (map.id === id) {\n                result = map\n                break\n            }\n        }\n        return result\n    }\n    handleSearchMode = (bool) => {\n        this.setState({ searchEnabled: bool })\n    }\n    search = (text) => {\n        this.setState({ loading: true, searchEnabled: true })\n        const { username, urls } = this.props\n        const { userMaps } = this.state\n        const url = this.configService.getMapApiSearchURL(urls.MapsAPI, username, userMaps, text)\n        doGet(url).then(result => {\n            this.setState({\n                maps: result.objects,\n                loading: false\n            })\n        })\n    }\n    getAttributes = (typename) => {\n        this.setState({ loading: true })\n        const { urls } = this.props\n        if (typename) {\n            let url = urls.layerAttributes\n            url = this.urls.getParamterizedURL(url, { 'layer__typename': typename })\n            doGet(url).then(result => {\n                this.setState({\n                    layerAttributes: result.objects,\n                    loading: false\n                })\n            })\n        }\n    }\n    getKeywords = () => {\n        this.setState({ loading: true })\n        const { urls } = this.props\n        const url = urls.keywordsAPI\n        doGet(url).then(result => {\n            this.setState({ keywords: result.objects, loading: false })\n        })\n    }\n    getProfiles = () => {\n        this.setState({ loading: true })\n        const { urls } = this.props\n        const url = urls.profilesAPI\n        doGet(url).then(result => {\n            this.setState({ profiles: result.objects, loading: false })\n        })\n    }\n    getTags = () => {\n        const { urls } = this.props\n        doGet(urls.tagsAPI).then(result => {\n            this.setState({ tags: result })\n        })\n    }\n    selectMap = (map) => {\n        this.setState({ selectedMap: map })\n    }\n    setStepRef = (name, ref) => {\n        this[name] = ref\n    }\n    getSteps = () => {\n        const { urls } = this.props\n        const {\n            maps,\n            loading,\n            selectedMap,\n            userMaps,\n            totalMaps,\n            config,\n            title,\n            abstract,\n            keywords,\n            instanceId,\n            searchEnabled,\n            profiles\n        } = this.state\n        let steps = [\n            {\n                title: \"Select Map\",\n                component: MapSelector,\n                ref: 'mapStep',\n                hasErrors: false,\n                props: {\n                    maps,\n                    selectedMap,\n                    loading,\n                    selectMap: this.selectMap,\n                    getMaps: this.getMaps,\n                    userMaps,\n                    totalMaps,\n                    UserMapsChanged: this.UserMapsChanged,\n                    limit: LIMIT,\n                    urls,\n                    search: this.search,\n                    handleSearchMode: this.handleSearchMode,\n                    searchEnabled\n                }\n            },\n            {\n                title: \"General\",\n                component: AppConfiguration,\n                ref: 'generalStep',\n                hasErrors: false,\n                props: {\n                    abstract,\n                    title,\n                    selectedMap,\n                    config,\n                    allKeywords: keywords,\n                    instanceId\n                }\n            },\n            {\n                title: \"Acccess Configuration\",\n                component: AppAccess,\n                ref: 'accessConfigurationStep',\n                hasErrors: false,\n                props: {\n                    loading,\n                    config,\n                    profiles,\n                }\n            },\n            {\n                title: \"Bookmarks\",\n                component: Bookmarks,\n                ref: 'bookmarksStep',\n                hasErrors: false,\n                props: {\n                    config,\n                    instanceId\n                }\n            },\n            {\n                title: \"GeoCoding\",\n                component: GeocodingConfiguration,\n                ref: 'geocodingStep',\n                hasErrors: false,\n                props: {\n                    config,\n                    instanceId\n                }\n            },\n            {\n                title: \"Navigation Tools\",\n                component: ToolConfiguration,\n                ref: 'toolsStep',\n                hasErrors: false,\n                props: {\n                    config,\n                    save: this.save,\n                    instanceId\n                }\n            }\n        ]\n        const { errors } = this.state\n        errors.map(error => steps[error].hasError = true)\n        return steps\n    }\n    toArray = (arrayOfStructs) => {\n        let arr = []\n        if (arrayOfStructs) {\n            arrayOfStructs.forEach((struct) => {\n                arr.push(struct.value)\n            }, this)\n        }\n        return arr\n    }\n    prepareServerData = () => {\n        const keywords = this.generalStep.getComponentValue().keywords\n        const { selectedMap } = this.state\n        let finalConfiguration = {\n            map: selectedMap.id,\n            ...this.generalStep.getComponentValue(),\n            config: {\n                ...this.toolsStep.getComponentValue(),\n                ...this.bookmarksStep.getComponentValue(),\n                ...this.geocodingStep.getComponentValue(),\n            },\n            access: this.accessConfigurationStep.getComponentValue(),\n            keywords: this.toArray(keywords)\n        }\n        return finalConfiguration\n\n    }\n    sendConfiguration = () => {\n        const { urls } = this.props\n        const { instanceId, errors } = this.state\n        if (errors.length == 0) {\n            this.setState({ saving: true })\n            const url = instanceId ? urls.editURL(instanceId) : urls.newURL\n            const data = JSON.stringify(this.prepareServerData())\n            doPost(url, data, { \"Content-Type\": \"application/json; charset=UTF-8\" }).then(result => {\n                this.setState({\n                    instanceId: result.id,\n                    saving: false\n                })\n            })\n\n        }\n\n    }\n    showComponentsErrors = (callBack) => {\n        let errors = []\n        const steps = this.getSteps()\n        steps.map((step, index) => {\n            const formValue = this[step.ref].getComponentValue()\n            if (!formValue) {\n                errors.push(index)\n            }\n        })\n        this.setState({ errors }, callBack)\n    }\n    save = () => {\n        this.showComponentsErrors(this.sendConfiguration)\n\n    }\n    validate = () => {\n        this.showComponentsErrors(() => { })\n    }\n    getChildrenProps = () => {\n        const props = {\n            ...this.state,\n            ...this.props,\n            steps: this.getSteps(),\n            setStepRef: this.setStepRef,\n            save: this.save,\n            validate: this.validate\n        }\n        return props\n    }\n    render() {\n        return (\n            <EditPageComponent childrenProps={this.getChildrenProps()} />\n        )\n    }\n}\nEditPage.propTypes = {\n    urls: PropTypes.object.isRequired,\n    config: PropTypes.object,\n    username: PropTypes.string.isRequired\n}\nexport default EditPage\n","import Select, { AsyncCreatable } from 'react-select'\n\nimport React from 'react'\nimport ReactTooltip from 'react-tooltip'\n\nlet toolTipId = 0;\nexport const getKeywordsTemplate = ( options ) => {\n    function renderInput( locals ) {\n        toolTipId++;\n        return <div style={{ paddingTop: 5, paddingBottom: 5 }} className={locals.hasError ? \"has-error\" : \"\"}>\n            <label className={\"control-label\"}>{locals.label}</label>\n            <AsyncCreatable\n                {...locals}\n                onChange={locals.onChange}\n                inputProps={locals.inputProps}\n                loadOptions={options.loadOptions}\n                value={locals.value}\n                multi={true}\n                deleteRemoves={true}\n                resetValue={null}\n                placeholder={options.message} />\n            {options.help&&<div>\n            <p className=\"help-block\"><i data-tip data-for={`id-${toolTipId}`} className=\"fa fa-info-circle pull-right\" aria-hidden=\"true\"></i></p>\n            <ReactTooltip getContent={()=>options.help} type=\"info\" place=\"left\" effect=\"solid\" id={`id-${toolTipId}`} />\n        </div>}\n        </div>\n    }\n    return renderInput\n}\nexport const getAttributesTemplate = ( options ) => {\n    function renderInput( locals ) {\n        toolTipId++;\n        return <div style={{ paddingTop: 5, paddingBottom: 5 }} className={locals.hasError ? \"has-error\" : \"\"}>\n            <label className={\"control-label\"}>{locals.label}</label>\n            <Select\n                {...locals}\n                onChange={locals.onChange}\n                inputProps={locals.inputProps}\n                options={options.options}\n                value={locals.value}\n                multi={true}\n                required={false}\n                deleteRemoves={true}\n                resetValue={null}\n                placeholder={options.message} />\n           {options.help&&<div>\n            <p className=\"help-block\"><i data-tip data-for={`id-${toolTipId}`} className=\"fa fa-info-circle pull-right\" aria-hidden=\"true\"></i></p>\n            <ReactTooltip getContent={()=>options.help} type=\"info\" place=\"left\" effect=\"solid\" id={`id-${toolTipId}`} />\n        </div>}\n        </div>\n    }\n    return renderInput\n}\n","import EditPage from './containers/EditPage'\nimport React from 'react'\nimport { getCRSFToken } from 'cartoview-sdk/helpers/helpers'\nimport { render } from 'react-dom'\nclass Viewer {\n    constructor( domId, username, urls ) {\n        this.domId = domId\n        this.urls = urls\n        this.username = username\n        this.config = null\n    }\n    loadConfig( ) {\n        return fetch( this.urls.appInstance, {\n            method: 'GET',\n            credentials: \"same-origin\",\n            headers: new Headers( {\n                \"Content-Type\": \"application/json; charset=UTF-8\",\n                \"X-CSRFToken\": getCRSFToken( )\n            } )\n        } ).then( ( response ) => response.json( ) )\n    }\n    view( ) {\n        if ( this.urls.appInstance ) {\n            this.loadConfig( ).then( ( res ) => {\n                this.config = {\n                    config: res.config,\n                    title: res.title,\n                    abstract: res.abstract,\n                    keywords: res.keywords,\n                    map: res.map,\n                    id:res.id\n                }\n                this.currentlayer=res.config.layer\n                render(\n                    <EditPage urls={this.urls} config={this.config} username={this.username}/>,\n                    document.getElementById( this.domId ) )\n            } )\n        } else {\n            render(\n                <EditPage urls={this.urls} config={this.config} username={this.username}/>,\n                document.getElementById( this.domId ) )\n        }\n    }\n}\nglobal.Viewer = Viewer\n","import 'react-toggle-switch/src/css/switch.css'\n\nimport { MapCard } from './MapCard'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport ReactPaginate from 'react-paginate'\nimport Spinner from 'react-spinkit'\nimport Switch from 'react-toggle-switch'\n\nconst MyResourcesRadioButtons = (props) => {\n    return (\n        <form className='my-resources-radio'>\n            <div className=\"radio margin-right-left-20\">\n                <label>\n                    My Maps\n                </label>\n                <input className={'margin-left-10'} type=\"radio\" value=\"myResources\" checked={props.selectedOption === 'myResources'} onChange={props.onChange}/>\n            </div>\n            <div className=\"radio margin-right-left-20 all-maps-radio\">\n                <input type=\"radio\" value=\"allResources\" checked={props.selectedOption === 'allResources'} onChange={props.onChange} />\n                <label>\n                    All Maps\n                </label>\n            </div>\n        </form>\n    )\n}\nMyResourcesRadioButtons.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    selectedOption: PropTypes.string.isRequired\n}\n\nconst UserMapSwitch = (props) => {\n    const { UserMapsChanged, userMaps } = props\n    return (\n        // <div className=\"col-xs-8 col-sm-4 col-md-4 col-lg-4 col-xs-offset-2 col-sm-offset-4 col-md-offset-4 col-lg-offset-4\">\n        //     <div className=\"flex-display\">\n        //         <p>{'All Maps'}</p>\n        //         <div>\n        //             <Switch on={userMaps} onClick={UserMapsChanged} />\n        //         </div>\n        //         <p>{'My Maps'}</p> \n        //     </div>\n        // </div>\n        <MyResourcesRadioButtons selectedOption={userMaps ? 'myResources' : 'allResources'} onChange={UserMapsChanged}/>\n    )\n}\nUserMapSwitch.propTypes = {\n    UserMapsChanged: PropTypes.func.isRequired,\n    userMaps: PropTypes.bool.isRequired\n}\nexport const Loader = (props) => {\n    return (\n        <div className=\"row row-fix\">\n            <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6 col-md-offset-3 text-center\">\n                <Spinner name=\"line-scale-pulse-out\" color=\"steelblue\" />\n            </div>\n        </div>\n    )\n}\nconst SearchBox = (props) => {\n    const { searchByTitle } = props\n    return (\n        <div className=\"input-group\">\n            <span className=\"input-group-addon\" id=\"search-box\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></span>\n            <input onChange={searchByTitle} type=\"text\" className=\"form-control\" placeholder=\"Search by title\" aria-describedby=\"search-box\" />\n        </div>\n    )\n}\nSearchBox.propTypes = {\n    searchByTitle: PropTypes.func.isRequired\n}\nexport default class MapSelector extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n    getComponentValue = () => {\n        return \"It's OK\"\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userMaps, maps, selectedMap } = this.props\n        if (nextProps.userMaps === userMaps && nextProps.maps === maps && selectedMap === nextProps.selectedMap) {\n            return false\n        }\n        return true\n    }\n    handlePageClick = (data) => {\n        const { getMaps } = this.props\n        const selected = data.selected\n        const offset = selected * 9\n        getMaps(offset)\n    }\n    searchByTitle = (event) => {\n        const { search, handleSearchMode, getMaps } = this.props\n        const text = event.target.value\n        if (text !== \"\") {\n            search(text)\n        } else {\n            handleSearchMode(false)\n            getMaps()\n        }\n    }\n    render() {\n        const { loading, selectedMap, selectMap, maps, userMaps, totalMaps, UserMapsChanged, limit, urls, searchEnabled } = this.props\n        return (\n            <div className=\"flex-row\">\n                <div className=\"row row-fix\">\n                    <SearchBox searchByTitle={this.searchByTitle} />\n                </div>\n                <div className=\"row row-fix\">\n                    <UserMapSwitch UserMapsChanged={UserMapsChanged} userMaps={userMaps} />\n                </div>\n                {loading && <Loader />}\n                {!loading && maps.map((map, index) => {\n                    return <MapCard urls={urls} key={index} map={map} selectedMap={selectedMap} selectMap={selectMap} />\n\n                })}\n                {(!loading && !searchEnabled && maps.length == 0 && userMaps) && <div className=\"row\">\n                    <div\n                        className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6 col-md-offset-3 col-lg-offset-3 text-center\">\n                        <h3>{`This Application requires a `}<a href={`${urls.newMap}`}>Map</a>{` and a `}<a href=\"https://docs.qgis.org/2.8/en/docs/training_manual/create_vector_data/create_new_vector.html\">Layer</a>{`. you will need to upload layer.Once you have a Layer you can create a Map with this layer`}</h3>\n                        <hr />\n                        <h3>{\"Alternatively you can work with other Maps and Layers that are shared with you or shared to Public.To view your Shared Maps click the Switcher on the top of page\"}</h3>\n\n                    </div>\n                </div>}\n                {!loading && searchEnabled && maps.length == 0 && <h3 className=\"text-center\">{\"No Maps Found\"}</h3>}\n                {!searchEnabled && <ReactPaginate\n                    previousLabel={\"previous\"}\n                    nextLabel={\"next\"}\n                    breakLabel={< a href=\"javascript:;\" > ...</a>}\n                    breakClassName={\"break-me\"}\n                    pageCount={totalMaps / limit}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={this.handlePageClick}\n                    containerClassName={\"pagination center-div\"}\n                    subContainerClassName={\"pages pagination\"}\n                    activeClassName={\"active\"} />}\n            </div>\n        )\n    }\n}\nMapSelector.propTypes = {\n    maps: PropTypes.array,\n    selectedMap: PropTypes.object,\n    urls: PropTypes.object.isRequired,\n    selectMap: PropTypes.func.isRequired,\n    getMaps: PropTypes.func.isRequired,\n    search: PropTypes.func.isRequired,\n    handleSearchMode: PropTypes.func.isRequired,\n    UserMapsChanged: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    userMaps: PropTypes.bool.isRequired,\n    searchEnabled: PropTypes.bool.isRequired,\n    totalMaps: PropTypes.number.isRequired,\n    limit: PropTypes.number.isRequired,\n}\n","import { getPropertyFromConfig, getSelectOptions } from '../../containers/staticMethods'\n\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { accessFormSchema } from '../../containers/forms'\nimport {\n    getAttributesTemplate\n} from './AutoCompleteInput'\nimport t from 'tcomb-form'\nconst Form = t.form.Form\nexport default class AppAccess extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: this.getFormValue(this.props)\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        const { errors } = this.props\n        if (nextProps.errors !== errors) {\n            return false\n        }\n        return true\n    }\n    flattenedUsers = (users) => {\n        return users.map(obj => obj.value)\n    }\n    getFormValueForSaving = (value) => {\n        let data = {}\n        Object.keys(value).map(attr => {\n            const attributeValue = value[attr]\n            data[attr] = attributeValue ? this.flattenedUsers(attributeValue) : null\n        })\n        return data\n    }\n    getComponentValue = () => {\n        let value = this.form.getValue()\n        if (value) {\n            value = this.getFormValueForSaving(value)\n        }\n        return value\n    }\n    onChange = (newValue) => {\n        this.setState({ value: newValue })\n    }\n    getAccess\n    getFormValue = (props) => {\n        const { config } = props\n        const viewAccess = getPropertyFromConfig(config ? config.access :\n            null, 'whoCanView', null)\n        const metadataAccess = getPropertyFromConfig(config ?\n            config.access : null, 'whoCanChangeMetadata',\n            null)\n        const deleteAccess = getPropertyFromConfig(config ? config.access :\n            null, 'whoCanDelete', null)\n        const changeAccess = getPropertyFromConfig(\n            config ? config.access : null,\n            'whoCanChangeConfiguration', null)\n        const value = {\n            whoCanView: viewAccess?getSelectOptions(viewAccess):viewAccess,\n            whoCanChangeMetadata: metadataAccess?getSelectOptions(metadataAccess):metadataAccess,\n            whoCanDelete:  deleteAccess?getSelectOptions(deleteAccess):deleteAccess,\n            whoCanChangeConfiguration: changeAccess?getSelectOptions(changeAccess):changeAccess,\n        }\n        return value\n    }\n    getFormOptions = () => {\n        const { profiles } = this.props\n        const userOptions = getSelectOptions(profiles, 'username')\n        const options = {\n            fields: {\n                whoCanView: {\n                    factory: t.form.Textbox,\n                    template: getAttributesTemplate({\n                        options: userOptions,\n                        message: \"Select Users or empty for anyone\"\n                    })\n                },\n                whoCanChangeMetadata: {\n                    factory: t.form.Textbox,\n                    template: getAttributesTemplate({\n                        options: userOptions,\n                        message: \"Select Users or empty for owner(you) only\"\n                    })\n                },\n                whoCanDelete: {\n                    factory: t.form.Textbox,\n                    template: getAttributesTemplate({\n                        options: userOptions,\n                        message: \"Select Users or empty for owner(you) only\"\n                    })\n                },\n                whoCanChangeConfiguration: {\n                    factory: t.form.Textbox,\n                    template: getAttributesTemplate({\n                        options: userOptions,\n                        message: \"Select Users or empty for owner(you) only\"\n                    })\n                },\n            }\n        }\n        return options\n    }\n    render() {\n        return (\n            <div>\n                <h3>{\"Access Configuration\"}</h3>\n                <Form\n                    ref={(form) => this.form = form}\n                    value={this.state.value}\n                    type={accessFormSchema()}\n                    onChange={this.onChange}\n                    options={this.getFormOptions()} />\n            </div>\n        )\n    }\n}\nAppAccess.propTypes = {\n    config: PropTypes.object,\n    loading: PropTypes.bool.isRequired,\n    profiles: PropTypes.array.isRequired,\n    errors: PropTypes.array.isRequired,\n}\n","import t from 'tcomb-form'\nexport const generalFormSchema = () => {\n    const selectKeywordItem = t.struct({\n        value: t.String,\n        label: t.String\n    })\n    const formSchema = t.struct({\n        title: t.String,\n        abstract: t.maybe(t.String),\n        keywords: t.list(selectKeywordItem)\n    })\n    return formSchema\n}\nexport const accessFormSchema = () => {\n    const selectUserItem = t.struct({\n        value: t.String,\n        label: t.String\n    })\n    const formSchema = t.struct({\n        whoCanView: t.maybe(t.list(selectUserItem)),\n        whoCanChangeMetadata: t.maybe(t.list(selectUserItem)),\n        whoCanDelete: t.maybe(t.list(selectUserItem)),\n        whoCanChangeConfiguration: t.maybe(t.list(selectUserItem))\n    })\n    return formSchema\n}\nexport const bookmarksFormSchema = () => {\n    const selectUserItem = t.struct({\n        name: t.String,\n        extent: t.String\n    })\n    const formSchema = t.struct({\n        bookmarks: t.maybe(t.list(selectUserItem)),\n    })\n    return formSchema\n}\nexport const toolFormSchema = () => {\n    const formSchema = t.struct({\n        enableHistory: t.Boolean,\n        enableFeatureTable: t.Boolean,\n        showLayerSwitcher: t.Boolean,\n        showExportMap: t.Boolean,\n        showLegend: t.Boolean\n    })\n    return formSchema\n}\n\nexport const geocodingFormSchema = () => {\n    const formSchema = t.struct({\n        boundlessGeoCodingEnabled: t.maybe(t.Boolean),\n        geocodingKey: t.maybe(t.String),\n    })\n    return formSchema\n}","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { geocodingFormSchema } from 'Source/containers/forms'\nimport { getPropertyFromConfig } from 'Source/containers/staticMethods'\nimport t from 'tcomb-form'\n// import { geocodinglFormSchema } from '../../containers/forms';\nconst Form = t.form.Form\nexport default class GeocodingConfiguration extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: this.getFormValue(this.props)\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        const { errors } = this.props\n        if (nextProps.errors !== errors) {\n            return false\n        }\n        return true\n    }\n    getComponentValue = () => {\n        const value = this.form.getValue()\n        return value\n    }\n    // componentWillReceiveProps(nextProps) {\n    //     const { selectedMap, config,instanceId } = this.props\n    //     if (((selectedMap !== nextProps.selectedMap) || config)&& !instanceId) {\n    //         this.setState({ value: this.getFormValue(nextProps) })\n    //     }\n    // }\n    onChange = (newValue) => {\n        this.setState({ value: newValue })\n    }\n    getFormValue = (props) => {\n        const { config } = props\n        const value = {\n            boundlessGeoCodingEnabled: config ? config.boundlessGeoCodingEnabled : false,\n            geocodingKey: config ? config.geocodingKey : null,\n        }\n        return value\n    }\n    getFormOptions = () => {\n        const options = {\n            fields: {\n                boundlessGeoCodingEnabled: {\n                    label: \"Enable Boundless GeoCoding Service\"\n                },\n                geocodingKey: {\n                    label: \"Key\",\n                    disabled: !this.state.value.boundlessGeoCodingEnabled ? true : false,\n                },\n            }\n        }\n        return options\n    }\n    render() {\n        return (\n            <div>\n                <h3>{\"Boundless Geocoding\"}</h3>\n                <Form\n                    ref={(form) => this.form = form}\n                    value={this.state.value}\n                    type={geocodingFormSchema()}\n                    onChange={this.onChange} />\n            </div>\n        )\n    }\n}\nGeocodingConfiguration.propTypes = {\n    config: PropTypes.object,\n    errors: PropTypes.array.isRequired,\n    instanceId:PropTypes.number\n}","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { generalFormSchema } from 'Source/containers/forms'\nimport {\n    getKeywordsTemplate\n} from './AutoCompleteInput'\nimport { getPropertyFromConfig } from 'Source/containers/staticMethods'\nimport t from 'tcomb-form'\nconst Form = t.form.Form\nexport default class AppConfiguration extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: this.getFormValue(this.props)\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        const { errors } = this.props\n        if (nextProps.errors !== errors) {\n            return false\n        }\n        return true\n    }\n    getKeywordsOptions = (input, callback) => {\n        const { allKeywords } = this.props\n        let keywordsOptions = []\n        allKeywords.forEach(keyword => {\n            keywordsOptions.push({\n                label: keyword.name,\n                value: keyword.name,\n            })\n        })\n        callback(null, {\n            options: keywordsOptions,\n            complete: true\n        })\n    }\n    getComponentValue = () => {\n        const value = this.form.getValue()\n        return value\n    }\n    componentWillReceiveProps(nextProps) {\n        const { selectedMap, config,instanceId } = this.props\n        if (((selectedMap !== nextProps.selectedMap) || config)&& !instanceId) {\n            this.setState({ value: this.getFormValue(nextProps) })\n        }\n    }\n    onChange = (newValue) => {\n        this.setState({ value: newValue })\n    }\n    keywordsToOptions=(keywords)=>{\n        let options=[]\n        keywords.map(keyword=>{\n            options.push({value:keyword,label:keyword})\n        })\n        return options\n    }\n    getFormValue = (props) => {\n        const { title, selectedMap, abstract, config } =\n            props\n        const value = {\n            title: title ? title : selectedMap ? selectedMap.title : null,\n            abstract: abstract ? abstract : selectedMap ?\n                selectedMap.abstract : null,\n            keywords: this.keywordsToOptions(getPropertyFromConfig(config, 'keywords',[]))\n        }\n        return value\n    }\n    getFormOptions = () => {\n        const options = {\n            fields: {\n                title: {\n                    label: \"App Title\"\n                },\n                keywords: {\n                    factory: t.form.Textbox,\n                    template: getKeywordsTemplate({\n                        loadOptions: this.getKeywordsOptions,\n                        message: \"Select or Enter a Keyword\"\n                    })\n                }\n            }\n        }\n        return options\n    }\n    render() {\n        return (\n            <div>\n                <h3>{\"General Configuration\"}</h3>\n                <Form\n                    ref={(form) => this.form = form}\n                    value={this.state.value}\n                    type={generalFormSchema()}\n                    onChange={this.onChange}\n                    options={this.getFormOptions()} />\n            </div>\n        )\n    }\n}\nAppConfiguration.propTypes = {\n    allKeywords: PropTypes.array.isRequired,\n    selectedMap: PropTypes.object,\n    config: PropTypes.object,\n    title: PropTypes.string,\n    abstract: PropTypes.string,\n    errors: PropTypes.array.isRequired,\n    instanceId:PropTypes.number\n}","import InfoModal from './InfoModal'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport classNames from 'classnames'\nconst ActionBar = (props) => {\n    const { save, selectedMap, instanceId, urls, saving, validate } = props\n    const extraProps = {\n        disabled: selectedMap && !saving ? false : true\n    }\n    return (\n        <div className=\"action-bar\">\n            <div className=\"grow\"></div>\n            <div>\n                {saving && <i className=\"fa fa-circle-o-notch fa-spin fa-lg fa-fw\"></i>}\n            </div>\n            <p>\n                <button onClick={save} className=\"btn btn-primary btn-sm pull-right\" {...extraProps}>{\"Save\"}</button>\n            </p>\n            {/* <p>\n                <button onClick={validate} className=\"btn btn-primary btn-sm pull-right\" {...extraProps}>{\"Validate\"}</button>\n            </p> */}\n            <p>\n                {instanceId && <a href={urls.viewURL(instanceId)} className=\"btn btn-sm btn-primary pull-right\">{\"View\"}</a>}\n            </p>\n        </div>\n    )\n}\nActionBar.propTypes = {\n    save: PropTypes.func.isRequired,\n    validate: PropTypes.func.isRequired,\n    selectedMap: PropTypes.object,\n    instanceId: PropTypes.number,\n    saving: PropTypes.bool.isRequired,\n    urls: PropTypes.object.isRequired\n}\nconst Tabs = (props) => {\n    const {\n        childrenProps,\n        getTabClassName,\n        checkIfDisabled,\n        getContentClassName\n    } = props\n    return (\n        <div>\n            <div className=\"col-xs-12 col-sm-12 col-md-3 col-lg-3\">\n                <ul className=\"nav nav-pills nav-stacked cartoview-nav-list\">\n                    {childrenProps.steps.map((step, index) => {\n                        const disabled = checkIfDisabled(step)\n                        return (\n                            <li key={index} className={getTabClassName(index)}>\n                                <a disabled={disabled} data-toggle={disabled ? \"\" : \"tab\"} className=\"fill-empty\" href={disabled ? \"javascript:;\" : `#component-${index}`}>\n                                    <span>{step.title}</span>\n                                    {step.hasError && <i className=\"fa fa-exclamation-triangle text-danger pull-right\" aria-hidden=\"true\"></i>}\n                                </a>\n                                \n                            </li>\n\n                        )\n                    })}\n                </ul>\n            </div>\n            <div className=\"col-xs-12 col-sm-12 col-md-9 col-lg-9\">\n                <div className=\"tab-content\">\n                    {childrenProps.steps.map((step, index) => {\n                        return (\n                            <div key={index} id={`component-${index}`} className={getContentClassName(index)}>\n                                <step.component errors={childrenProps.errors} ref={ComponentRef => childrenProps.setStepRef(step.ref, ComponentRef)} urls={childrenProps.urls} {...step.props} />\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\nTabs.propTypes = {\n    childrenProps: PropTypes.object.isRequired,\n    getTabClassName: PropTypes.func.isRequired,\n    checkIfDisabled: PropTypes.func.isRequired,\n    getContentClassName: PropTypes.func.isRequired,\n}\nconst AppBar = (props) => {\n    const { handleHideModal } = props\n    return (\n        <div className=\"flex-element full-width\">\n            <div className=\"grow\">\n                <h1>{\"BasicViewer\"}</h1>\n            </div>\n            <div className=\"text-center\">\n                <h1>\n                    <button onClick={handleHideModal} className=\"btn btn-primary\">\n                        <i className=\"fa fa-question-circle fa-lg\" aria-hidden=\"true\"></i>\n                    </button>\n                </h1>\n            </div>\n        </div>\n    )\n}\nAppBar.propTypes = {\n    handleHideModal: PropTypes.func.isRequired\n}\nexport default class EditPageComponent extends React.Component {\n    state = {\n        showModal: false\n    }\n    checkIfDisabled = (index) => {\n        const { childrenProps } = this.props\n        return (!childrenProps.selectedMap) ? index === 0 ? false : true : false\n    }\n    getTabClassName = (index) => {\n        const check = this.checkIfDisabled(index)\n        return classNames({\n            disabled: check,\n            active: index === 0,\n            \"nav-item\": true,\n            \"flex-element\": true,\n\n        })\n    }\n    handleHideModal = () => {\n        const { showModal } = this.state\n        this.setState({ showModal: !showModal })\n    }\n    getContentClassName = (index) => {\n        return classNames({\n            \"active\": index === 0,\n            \"tab-pane fade in\": true\n        })\n    }\n    render() {\n        const { childrenProps } = this.props\n        let { showModal } = this.state\n        return (\n            <div className=\"base\">\n                <AppBar handleHideModal={this.handleHideModal} />\n                <ActionBar validate={childrenProps.validate} saving={childrenProps.saving} urls={childrenProps.urls} save={childrenProps.save} selectedMap={childrenProps.selectedMap} instanceId={childrenProps.instanceId} />\n                <div className=\"row content\">\n                    <Tabs childrenProps={childrenProps} checkIfDisabled={this.checkIfDisabled} getContentClassName={this.getContentClassName} getTabClassName={this.getTabClassName} />\n                </div>\n                {showModal && <InfoModal handleHideModal={this.handleHideModal} />}\n            </div>\n        )\n    }\n}\nEditPageComponent.propTypes = {\n    childrenProps: PropTypes.object.isRequired\n}\n","import isURL from 'validator/lib/isURL'\nexport const getPropertyFromConfig = (config, property, defaultValue) => {\n    const propertyValue = config && typeof (config[property]) !==\n        \"undefined\" ? config[property] : defaultValue\n    const nestedPropertyValue = config && config.config && typeof (config\n        .config[property]) !== \"undefined\" ? config.config[\n        property] : propertyValue\n    return nestedPropertyValue\n}\nexport const checkURL = (value) => {\n    /* validator validate strings only */\n    if (typeof (value) === \"string\") {\n        return isURL(value)\n    }\n    return false\n}\nexport const checkImageSrc = (src, good, bad) => {\n    let img = new Image()\n    img.onload = good\n    img.onerror = bad\n    img.src = src\n}\nexport const getSelectOptions = (arr, label = null, value = null) => {\n    let options = []\n    if (arr && arr.length > 0) {\n        options = arr.map(item => {\n            if (!label) {\n                return { value: item, label: item }\n            }\n            return {\n                value: item[label], label: item[value ?\n                    value : label]\n            }\n        })\n    }\n    return options\n}","import 'ol/ol.css'\n\nimport BasicViewerHelper from 'cartoview-sdk/helpers/BasicViewerHelper'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport classNames from 'classnames'\nimport { getPropertyFromConfig } from 'Source/containers/staticMethods'\n\nexport default class Bookmarks extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            bookmarks: this.getFormValue(this.props),\n            map: BasicViewerHelper.getMap(),\n            showMap: false\n        }\n        global.map=this.state.map\n    }\n    getComponentValue = () => {\n        return { bookmarks: this.state.bookmarks }\n    }\n    getFormValue = (props) => {\n        const { config } = props\n        const value = getPropertyFromConfig(config,\n            'bookmarks', [])\n        return value\n    }\n    componentDidMount = () => {\n        let { map } = this.state\n        map.setTarget(this.mapDiv)\n\n    }\n    componentWillReceiveProps(nextProps) {\n        const { config, instanceId } = this.props\n\n        if (config && !instanceId) {\n            this.setState({ bookmarks: this.getFormValue(nextProps) })\n        }\n\n    }\n    showMap = () => {\n        this.setState({ showMap: !this.state.showMap }, () => {\n            this.state.map.updateSize()\n            this.state.map.render()\n        })\n    }\n    addBookmark = () => {\n        const { bookmarks, map } = this.state\n        let newBookmarks = []\n        newBookmarks.push({\n            name: 'New Bookmark', extent: map.getView().calculateExtent().join('/')\n        })\n        const newValue = [...bookmarks, ...newBookmarks]\n        this.setState({ bookmarks: newValue })\n\n\n    }\n    onChange = index => event => {\n        const { bookmarks } = this.state\n        let newBookmarks = [...bookmarks]\n        let editedOne = newBookmarks[index]\n        editedOne.name = event.target.value\n        newBookmarks.splice(index, 1, editedOne)\n        this.setState({ bookmarks: newBookmarks })\n    }\n    onDescriptionChange = index => event => {\n        const { bookmarks } = this.state\n        let newBookmarks = [...bookmarks]\n        let editedOne = newBookmarks[index]\n        editedOne.description = event.target.value\n        newBookmarks.splice(index, 1, editedOne)\n        this.setState({ bookmarks: newBookmarks })\n    }\n    removeBookmark = (index) => {\n        const { bookmarks } = this.state\n        let newBookmarks = [...bookmarks]\n        newBookmarks.splice(index, 1)\n        this.setState({ bookmarks: newBookmarks })\n    }\n    render() {\n        const { showMap, bookmarks } = this.state\n        return (\n            <div>\n                <h3>{\"Bookmarks\"}</h3>\n                <div id=\"map\" ref={(mapDiv) => this.mapDiv = mapDiv} className={classNames(\"bookmarks-map\", { 'hidden': !showMap })}></div>\n                <hr />\n                <div className=\"bookmark-item\">\n                    <button onClick={this.showMap} className='btn btn-primary'>{`${showMap ? 'Hide' : 'Show'} Map`}</button>\n                    {showMap && <button onClick={this.addBookmark} className='btn btn-primary'>{`add Bookmark`}</button>}\n                </div>\n                {bookmarks.map((bookmark, index) => {\n                    return <div key={index} className='bookmark-item'>\n                        <div className=\"form-group\">\n                            <label htmlFor={`name${index}`}>{\"Name: \"}</label>\n                            <input onChange={this.onChange(index)} type=\"text\" className=\"form-control\" value={bookmark.name} id={`name${index}`} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor={`description${index}`}>{\"Description: \"}</label>\n                            <input onChange={this.onDescriptionChange(index)} type=\"text\" className=\"form-control\" value={bookmark.description} id={`description${index}`} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor={`extent${index}`}>{\"Extent: \"}</label>\n                            <input disabled={true} type=\"text\" className=\"form-control\" value={bookmark.extent} id={`extent${index}`} />\n                        </div>\n                        <div>\n                            <button onClick={() => this.removeBookmark(index)} className={\"btn btn-danger\"}>{'Remove'}</button>\n                        </div>\n                    </div>\n                })}\n            </div>\n        )\n    }\n}\nBookmarks.propTypes = {\n    config: PropTypes.object,\n    instanceId: PropTypes.number\n}\n","import Img from 'react-image'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport Spinner from 'react-spinkit'\n\nexport const MapCard = (props) => {\n    const { selectMap, map, selectedMap, urls } = props\n    return (\n        <div\n            onClick={() => selectMap(map)}\n            key={map.id}\n            className={ selectedMap && (selectedMap.id === map.id)\n                ? \"row row-fix resource-box bg-success\"\n                : \"row row-fix resource-box\"}>\n\n            <div className=\"col-xs-12 col-sm-4 col-md-4 col-lg-4 resource-box-img-container\">\n                <Img\n                    className=\"resource-box-img\"\n                    src={[map.thumbnail_url, urls.noImage]}\n                    loader={< Spinner name=\"line-scale-pulse-out\" color=\"steelblue\" />} />\n            </div>\n\n            <div className=\"col-xs-12 col-sm-8 col-md-8 col-lg-8 resource-box-text title-wrap\">\n                <h4 className=\"title-wrap\">{map.title}</h4>\n                <p className=\"title-wrap\">\n                    {map.abstract}\n                </p>\n                <small>owner: {map.owner__username}</small><br />\n                <a type=\"button\"\n                    href={urls.mapDetails(map.id)}\n                    target=\"_blank\"\n                    className=\"btn btn-primary map-details-button\">\n                    {'Details'}\n                </a>\n            </div>\n        </div>\n    )\n}\nMapCard.propTypes = {\n    selectMap: PropTypes.func.isRequired,\n    map: PropTypes.object.isRequired,\n    selectedMap: PropTypes.object,\n    urls: PropTypes.object.isRequired\n}","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types'\n\nexport default class InfoModal extends Component {\n    constructor(props) {\n        super(props)\n    }\n    componentDidMount() {\n        $(this.modal).modal('show')\n        $(this.modal).on('hidden.bs.modal', this.props.handleHideModal)\n    }\n    render() {\n        return (\n            <div ref={(modalRef) => this.modal = modalRef} className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                            <h4 className=\"modal-title\">{\"Cartoview BasicViewer\"}</h4>\n                        </div>\n                        <div className=\"modal-body\">\n                            <p>\n                                {\"General purpose map viewer with only the essential compoonents for navigation and display. Optimized for mobile. Using Openlayers 3 and Boundless SDK\"}\n                            </p>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nInfoModal.propTypes = {\n    handleHideModal: PropTypes.func.isRequired,\n}\n"],"sourceRoot":""}