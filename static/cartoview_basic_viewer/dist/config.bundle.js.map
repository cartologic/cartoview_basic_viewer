{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/components/edit/ToolConfiguration.jsx","webpack:///./src/containers/EditPage.jsx","webpack:///./src/components/edit/AutoCompleteInput.jsx","webpack:///./src/EditPageEntry.jsx","webpack:///./src/components/edit/MapSelector.jsx","webpack:///./src/components/edit/Access.jsx","webpack:///./src/containers/forms.jsx","webpack:///./src/components/edit/GeocodingConfiguration.jsx","webpack:///./src/components/edit/AppConfiguration.jsx","webpack:///./src/components/edit/EditPage.jsx","webpack:///./src/containers/staticMethods.jsx","webpack:///./src/components/edit/Bookmarks.jsx","webpack:///./src/components/edit/MapCard.jsx","webpack:///./src/components/edit/InfoModal.jsx"],"names":["root","factory","exports","module","define","amd","window","webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","4","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","oldJsonpFunction","slice","_staticMethods","_forms","options","fields","showZoombar","label","showLayerSwitcher","showBaseMapSwitcher","showLegend","Form","_tcombForm2","default","form","ToolConfiguration","props","_classCallCheck3","this","_this","_possibleConstructorReturn3","__proto__","_getPrototypeOf2","_initialiseProps","state","getFormValue","nextProps","_props","config","instanceId","setState","_this2","_react2","createElement","ref","formRef","type","toolFormSchema","onChange","Component","getComponentValue","_this3","getValue","enableHistory","getPropertyFromConfig","enableFeatureTable","showExportMap","newValue","propTypes","_propTypes2","number","_utils","EditPage","urls","configService","_Configuration2","proxy","_urls2","maps","userMaps","selectedMap","map","loading","totalMaps","layerAttributes","title","abstract","tags","keywords","saving","errors","profiles","id","searchEnabled","getMaps","getKeywords","getProfiles","_EditPage2","childrenProps","getChildrenProps","UserMapsChanged","offset","arguments","undefined","limit","username","url","getMapApiURL","MapsAPI","doGet","then","objects","meta","total_count","searchMapById","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_getIterator3","next","done","err","return","handleSearchMode","bool","search","text","_props2","getMapApiSearchURL","getAttributes","typename","getParamterizedURL","layer__typename","keywordsAPI","profilesAPI","getTags","tagsAPI","selectMap","setStepRef","getSteps","_state","steps","component","hasErrors","allKeywords","save","error","hasError","toArray","arrayOfStructs","arr","forEach","struct","prepareServerData","generalStep","finalConfiguration","toolsStep","bookmarksStep","geocodingStep","access","accessConfigurationStep","sendConfiguration","_state2","editURL","newURL","_stringify2","doPost","Content-Type","showComponentsErrors","callBack","step","index","validate","isRequired","string","_reactSelect","toolTipId","getKeywordsTemplate","locals","style","paddingTop","paddingBottom","className","AsyncCreatable","_extends3","inputProps","loadOptions","multi","deleteRemoves","resetValue","placeholder","message","help","data-tip","data-for","aria-hidden","_reactTooltip2","getContent","place","effect","getAttributesTemplate","_reactSelect2","required","_helpers","_reactDom","Viewer","domId","fetch","appInstance","method","credentials","headers","Headers","X-CSRFToken","getCRSFToken","response","json","loadConfig","res","currentlayer","layer","render","document","getElementById","global","_MapCard","MyResourcesRadioButtons","checked","selectedOption","func","UserMapSwitch","Loader","_reactSpinkit2","color","SearchBox","searchByTitle","aria-describedby","MapSelector","handlePageClick","selected","event","_this$props","target","nextState","MapCard","href","newMap","_reactPaginate2","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","array","_AutoCompleteInput","AppAccess","accessFormSchema","getFormOptions","flattenedUsers","users","obj","getFormValueForSaving","_keys2","attr","attributeValue","viewAccess","metadataAccess","deleteAccess","changeAccess","whoCanView","getSelectOptions","whoCanChangeMetadata","whoCanDelete","whoCanChangeConfiguration","userOptions","Textbox","template","_tcombForm","generalFormSchema","selectKeywordItem","String","maybe","list","selectUserItem","bookmarksFormSchema","extent","bookmarks","Boolean","geocodingFormSchema","boundlessGeoCodingEnabled","geocodingKey","GeocodingConfiguration","disabled","AppConfiguration","getKeywordsOptions","input","callback","keywordsOptions","keyword","complete","keywordsToOptions","ActionBar","extraProps","onClick","viewURL","Tabs","getTabClassName","checkIfDisabled","getContentClassName","data-toggle","ComponentRef","AppBar","handleHideModal","EditPageComponent","showModal","check","_classnames2","active","nav-item","flex-element","tab-pane fade in","_InfoModal2","_isURL","defaultValue","propertyValue","checkURL","_isURL2","checkImageSrc","src","good","bad","img","Image","onload","onerror","item","Bookmarks","_BasicViewerHelper2","getMap","showMap","mapDiv","hidden","addBookmark","bookmark","htmlFor","onDescriptionChange","description","removeBookmark","componentDidMount","setTarget","updateSize","newBookmarks","getView","calculateExtent","join","editedOne","_reactImage2","thumbnail_url","noImage","loader","owner__username","mapDetails","_react","InfoModal","$","modal","on","modalRef","tabIndex","role","data-dismiss","aria-label"],"mappings":"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","file":"config.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"config\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"config\"] = factory();\n\telse\n\t\troot[\"config\"] = factory();\n})(window, function() {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t4: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/cartoview_basic_viewer/dist/\";\n\n \tvar jsonpArray = window[\"webpackJsonp_name_\"] = window[\"webpackJsonp_name_\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"TZsX\",0,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { getPropertyFromConfig } from 'Source/containers/staticMethods'\nimport t from 'tcomb-form'\nimport { toolFormSchema } from 'Source/containers/forms'\nconst options = {\n    fields: {\n        showZoombar: {\n            label: \"Zoom Bar\"\n        },\n        showLayerSwitcher: {\n            label: \"Layer Switcher\"\n        },\n        showBaseMapSwitcher: {\n            showBaseMapSwitcher: \"Base Map Switcher\"\n        },\n        showLegend: {\n            label: \"Legend\"\n        }\n    }\n}\nconst Form = t.form.Form\nexport default class ToolConfiguration extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: this.getFormValue(this.props)\n        }\n    }\n    getComponentValue = () => {\n        return this.form.getValue()\n    }\n    getFormValue = (props) => {\n        const { config } = props\n        const value = {\n            enableHistory: getPropertyFromConfig(config,\n                'enableHistory', true),\n            enableFeatureTable: getPropertyFromConfig(config,\n                'enableFeatureTable', true),\n            showZoombar: getPropertyFromConfig(config,\n                'showZoombar', true),\n            showLayerSwitcher: getPropertyFromConfig(config,\n                'showLayerSwitcher', true),\n            showExportMap: getPropertyFromConfig(config,\n                'showExportMap', true),\n            showLegend: getPropertyFromConfig(config,\n                'showLegend', true)\n        }\n        return value\n    }\n    componentWillReceiveProps(nextProps) {\n        const { config, instanceId } = this.props\n        if (config && !instanceId) {\n            this.setState({ value: this.getFormValue(nextProps) })\n        }\n    }\n    onChange = (newValue) => {\n        this.setState({ value: newValue })\n    }\n    render() {\n        return (\n            <div>\n                <h3>{\"Navigation Tools\"}</h3>\n                <Form\n                    ref={(formRef) => this.form = formRef}\n                    value={this.state.value}\n                    type={toolFormSchema()}\n                    onChange={this.onChange}\n                    options={options} />\n            </div>\n        )\n    }\n}\nToolConfiguration.propTypes = {\n    config: PropTypes.object,\n    instanceId: PropTypes.number\n}\n","import 'Source/css/app.css'\nimport 'react-select/dist/react-select.min.css'\n\nimport { doGet, doPost } from 'cartoview-sdk/utils/utils'\n\nimport AppAccess from 'Source/components/edit/Access'\nimport AppConfiguration from 'Source/components/edit/AppConfiguration'\nimport Bookmarks from 'Source/components/edit/Bookmarks'\nimport Configuration from 'cartoview-sdk/services/Configuration'\nimport EditPageComponent from 'Source/components/edit/EditPage'\nimport GeocodingConfiguration from 'Source/components/edit/GeocodingConfiguration'\nimport MapSelector from 'Source/components/edit/MapSelector'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport ToolConfiguration from 'Source/components/edit/ToolConfiguration'\nimport URLS from 'cartoview-sdk/urls/urls'\n\nconst LIMIT = 9\nclass EditPage extends React.Component {\n    constructor(props) {\n        super(props)\n        const { urls } = this.props\n\n        this.configService = new Configuration(urls.proxy)\n        this.urls = new URLS(urls.proxy)\n        const { config } = this.props\n        this.state = {\n            maps: [],\n            userMaps: true,\n            selectedMap: config ? config.map : null,\n            loading: false,\n            totalMaps: 0,\n            layerAttributes: [],\n            title: config ? config.title : null,\n            abstract: config ? config.abstract : null,\n            config: config ? config.config : null,\n            tags: [],\n            keywords: [],\n            saving: false,\n            errors: [],\n            profiles: [],\n            instanceId: config ? config.id : null,\n            searchEnabled: false\n        }\n    }\n    componentWillMount() {\n        this.getMaps()\n        this.getKeywords()\n        this.getProfiles()\n    }\n    UserMapsChanged = () => {\n        const { userMaps } = this.state\n        this.setState({ userMaps: !userMaps }, this.getMaps)\n    }\n    getMaps = (offset = 0, limit = LIMIT) => {\n        this.setState({ loading: true })\n        const { username, urls } = this.props\n        const { userMaps } = this.state\n        const url = this.configService.getMapApiURL(urls.MapsAPI, username, userMaps, limit,\n            offset)\n        doGet(url).then(result => {\n            this.setState({\n                maps: result.objects,\n                loading: false,\n                totalMaps: result.meta.total_count\n            })\n        })\n    }\n    searchMapById = (id) => {\n        const { maps } = this.state\n        let result = null\n        for (let map of maps) {\n            if (map.id === id) {\n                result = map\n                break\n            }\n        }\n        return result\n    }\n    handleSearchMode = (bool) => {\n        this.setState({ searchEnabled: bool })\n    }\n    search = (text) => {\n        this.setState({ loading: true, searchEnabled: true })\n        const { username, urls } = this.props\n        const { userMaps } = this.state\n        const url = this.configService.getMapApiSearchURL(urls.MapsAPI, username, userMaps, text)\n        doGet(url).then(result => {\n            this.setState({\n                maps: result.objects,\n                loading: false\n            })\n        })\n    }\n    getAttributes = (typename) => {\n        this.setState({ loading: true })\n        const { urls } = this.props\n        if (typename) {\n            let url = urls.layerAttributes\n            url = this.urls.getParamterizedURL(url, { 'layer__typename': typename })\n            doGet(url).then(result => {\n                this.setState({\n                    layerAttributes: result.objects,\n                    loading: false\n                })\n            })\n        }\n    }\n    getKeywords = () => {\n        this.setState({ loading: true })\n        const { urls } = this.props\n        const url = urls.keywordsAPI\n        doGet(url).then(result => {\n            this.setState({ keywords: result.objects, loading: false })\n        })\n    }\n    getProfiles = () => {\n        this.setState({ loading: true })\n        const { urls } = this.props\n        const url = urls.profilesAPI\n        doGet(url).then(result => {\n            this.setState({ profiles: result.objects, loading: false })\n        })\n    }\n    getTags = () => {\n        const { urls } = this.props\n        doGet(urls.tagsAPI).then(result => {\n            this.setState({ tags: result })\n        })\n    }\n    selectMap = (map) => {\n        this.setState({ selectedMap: map })\n    }\n    setStepRef = (name, ref) => {\n        this[name] = ref\n    }\n    getSteps = () => {\n        const { urls } = this.props\n        const {\n            maps,\n            loading,\n            selectedMap,\n            userMaps,\n            totalMaps,\n            config,\n            title,\n            abstract,\n            keywords,\n            instanceId,\n            searchEnabled,\n            profiles\n        } = this.state\n        let steps = [\n            {\n                title: \"Select Map\",\n                component: MapSelector,\n                ref: 'mapStep',\n                hasErrors: false,\n                props: {\n                    maps,\n                    selectedMap,\n                    loading,\n                    selectMap: this.selectMap,\n                    getMaps: this.getMaps,\n                    userMaps,\n                    totalMaps,\n                    UserMapsChanged: this.UserMapsChanged,\n                    limit: LIMIT,\n                    urls,\n                    search: this.search,\n                    handleSearchMode: this.handleSearchMode,\n                    searchEnabled\n                }\n            },\n            {\n                title: \"General\",\n                component: AppConfiguration,\n                ref: 'generalStep',\n                hasErrors: false,\n                props: {\n                    abstract,\n                    title,\n                    selectedMap,\n                    config,\n                    allKeywords: keywords,\n                    instanceId\n                }\n            },\n            {\n                title: \"Acccess Configuration\",\n                component: AppAccess,\n                ref: 'accessConfigurationStep',\n                hasErrors: false,\n                props: {\n                    loading,\n                    config,\n                    profiles,\n                }\n            },\n            {\n                title: \"Bookmarks\",\n                component: Bookmarks,\n                ref: 'bookmarksStep',\n                hasErrors: false,\n                props: {\n                    config,\n                    instanceId\n                }\n            },\n            {\n                title: \"GeoCoding\",\n                component: GeocodingConfiguration,\n                ref: 'geocodingStep',\n                hasErrors: false,\n                props: {\n                    config,\n                    instanceId\n                }\n            },\n            {\n                title: \"Navigation Tools\",\n                component: ToolConfiguration,\n                ref: 'toolsStep',\n                hasErrors: false,\n                props: {\n                    config,\n                    save: this.save,\n                    instanceId\n                }\n            }\n        ]\n        const { errors } = this.state\n        errors.map(error => steps[error].hasError = true)\n        return steps\n    }\n    toArray = (arrayOfStructs) => {\n        let arr = []\n        if (arrayOfStructs) {\n            arrayOfStructs.forEach((struct) => {\n                arr.push(struct.value)\n            }, this)\n        }\n        return arr\n    }\n    prepareServerData = () => {\n        const keywords = this.generalStep.getComponentValue().keywords\n        const { selectedMap } = this.state\n        let finalConfiguration = {\n            map: selectedMap.id,\n            ...this.generalStep.getComponentValue(),\n            config: {\n                ...this.toolsStep.getComponentValue(),\n                ...this.bookmarksStep.getComponentValue(),\n                ...this.geocodingStep.getComponentValue(),\n            },\n            access: this.accessConfigurationStep.getComponentValue(),\n            keywords: this.toArray(keywords)\n        }\n        return finalConfiguration\n\n    }\n    sendConfiguration = () => {\n        const { urls } = this.props\n        const { instanceId, errors } = this.state\n        if (errors.length == 0) {\n            this.setState({ saving: true })\n            const url = instanceId ? urls.editURL(instanceId) : urls.newURL\n            const data = JSON.stringify(this.prepareServerData())\n            doPost(url, data, { \"Content-Type\": \"application/json; charset=UTF-8\" }).then(result => {\n                this.setState({\n                    instanceId: result.id,\n                    saving: false\n                })\n            })\n\n        }\n\n    }\n    showComponentsErrors = (callBack) => {\n        let errors = []\n        const steps = this.getSteps()\n        steps.map((step, index) => {\n            const formValue = this[step.ref].getComponentValue()\n            if (!formValue) {\n                errors.push(index)\n            }\n        })\n        this.setState({ errors }, callBack)\n    }\n    save = () => {\n        this.showComponentsErrors(this.sendConfiguration)\n\n    }\n    validate = () => {\n        this.showComponentsErrors(() => { })\n    }\n    getChildrenProps = () => {\n        const props = {\n            ...this.state,\n            ...this.props,\n            steps: this.getSteps(),\n            setStepRef: this.setStepRef,\n            save: this.save,\n            validate: this.validate\n        }\n        return props\n    }\n    render() {\n        return (\n            <EditPageComponent childrenProps={this.getChildrenProps()} />\n        )\n    }\n}\nEditPage.propTypes = {\n    urls: PropTypes.object.isRequired,\n    config: PropTypes.object,\n    username: PropTypes.string.isRequired\n}\nexport default EditPage\n","import Select, { AsyncCreatable } from 'react-select'\n\nimport React from 'react'\nimport ReactTooltip from 'react-tooltip'\n\nlet toolTipId = 0;\nexport const getKeywordsTemplate = ( options ) => {\n    function renderInput( locals ) {\n        toolTipId++;\n        return <div style={{ paddingTop: 5, paddingBottom: 5 }} className={locals.hasError ? \"has-error\" : \"\"}>\n            <label className={\"control-label\"}>{locals.label}</label>\n            <AsyncCreatable\n                {...locals}\n                onChange={locals.onChange}\n                inputProps={locals.inputProps}\n                loadOptions={options.loadOptions}\n                value={locals.value}\n                multi={true}\n                deleteRemoves={true}\n                resetValue={null}\n                placeholder={options.message} />\n            {options.help&&<div>\n            <p className=\"help-block\"><i data-tip data-for={`id-${toolTipId}`} className=\"fa fa-info-circle pull-right\" aria-hidden=\"true\"></i></p>\n            <ReactTooltip getContent={()=>options.help} type=\"info\" place=\"left\" effect=\"solid\" id={`id-${toolTipId}`} />\n        </div>}\n        </div>\n    }\n    return renderInput\n}\nexport const getAttributesTemplate = ( options ) => {\n    function renderInput( locals ) {\n        toolTipId++;\n        return <div style={{ paddingTop: 5, paddingBottom: 5 }} className={locals.hasError ? \"has-error\" : \"\"}>\n            <label className={\"control-label\"}>{locals.label}</label>\n            <Select\n                {...locals}\n                onChange={locals.onChange}\n                inputProps={locals.inputProps}\n                options={options.options}\n                value={locals.value}\n                multi={true}\n                required={false}\n                deleteRemoves={true}\n                resetValue={null}\n                placeholder={options.message} />\n           {options.help&&<div>\n            <p className=\"help-block\"><i data-tip data-for={`id-${toolTipId}`} className=\"fa fa-info-circle pull-right\" aria-hidden=\"true\"></i></p>\n            <ReactTooltip getContent={()=>options.help} type=\"info\" place=\"left\" effect=\"solid\" id={`id-${toolTipId}`} />\n        </div>}\n        </div>\n    }\n    return renderInput\n}\n","import EditPage from './containers/EditPage'\nimport React from 'react'\nimport { getCRSFToken } from 'cartoview-sdk/helpers/helpers'\nimport { render } from 'react-dom'\nclass Viewer {\n    constructor( domId, username, urls ) {\n        this.domId = domId\n        this.urls = urls\n        this.username = username\n        this.config = null\n    }\n    loadConfig( ) {\n        return fetch( this.urls.appInstance, {\n            method: 'GET',\n            credentials: \"same-origin\",\n            headers: new Headers( {\n                \"Content-Type\": \"application/json; charset=UTF-8\",\n                \"X-CSRFToken\": getCRSFToken( )\n            } )\n        } ).then( ( response ) => response.json( ) )\n    }\n    view( ) {\n        if ( this.urls.appInstance ) {\n            this.loadConfig( ).then( ( res ) => {\n                this.config = {\n                    config: res.config,\n                    title: res.title,\n                    abstract: res.abstract,\n                    keywords: res.keywords,\n                    map: res.map,\n                    id:res.id\n                }\n                this.currentlayer=res.config.layer\n                render(\n                    <EditPage urls={this.urls} config={this.config} username={this.username}/>,\n                    document.getElementById( this.domId ) )\n            } )\n        } else {\n            render(\n                <EditPage urls={this.urls} config={this.config} username={this.username}/>,\n                document.getElementById( this.domId ) )\n        }\n    }\n}\nglobal.Viewer = Viewer\n","import 'react-toggle-switch/src/css/switch.css'\n\nimport { MapCard } from './MapCard'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport ReactPaginate from 'react-paginate'\nimport Spinner from 'react-spinkit'\nimport Switch from 'react-toggle-switch'\n\nconst MyResourcesRadioButtons = (props) => {\n    return (\n        <form className='my-resources-radio'>\n            <div className=\"radio margin-right-left-20\">\n                <label>\n                    My Maps\n                </label>\n                <input className={'margin-left-10'} type=\"radio\" value=\"myResources\" checked={props.selectedOption === 'myResources'} onChange={props.onChange}/>\n            </div>\n            <div className=\"radio margin-right-left-20 all-maps-radio\">\n                <input type=\"radio\" value=\"allResources\" checked={props.selectedOption === 'allResources'} onChange={props.onChange} />\n                <label>\n                    All Maps\n                </label>\n            </div>\n        </form>\n    )\n}\nMyResourcesRadioButtons.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    selectedOption: PropTypes.string.isRequired\n}\n\nconst UserMapSwitch = (props) => {\n    const { UserMapsChanged, userMaps } = props\n    return (\n        // <div className=\"col-xs-8 col-sm-4 col-md-4 col-lg-4 col-xs-offset-2 col-sm-offset-4 col-md-offset-4 col-lg-offset-4\">\n        //     <div className=\"flex-display\">\n        //         <p>{'All Maps'}</p>\n        //         <div>\n        //             <Switch on={userMaps} onClick={UserMapsChanged} />\n        //         </div>\n        //         <p>{'My Maps'}</p> \n        //     </div>\n        // </div>\n        <MyResourcesRadioButtons selectedOption={userMaps ? 'myResources' : 'allResources'} onChange={UserMapsChanged}/>\n    )\n}\nUserMapSwitch.propTypes = {\n    UserMapsChanged: PropTypes.func.isRequired,\n    userMaps: PropTypes.bool.isRequired\n}\nexport const Loader = (props) => {\n    return (\n        <div className=\"row row-fix\">\n            <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6 col-md-offset-3 text-center\">\n                <Spinner name=\"line-scale-pulse-out\" color=\"steelblue\" />\n            </div>\n        </div>\n    )\n}\nconst SearchBox = (props) => {\n    const { searchByTitle } = props\n    return (\n        <div className=\"input-group\">\n            <span className=\"input-group-addon\" id=\"search-box\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></span>\n            <input onChange={searchByTitle} type=\"text\" className=\"form-control\" placeholder=\"Search by title\" aria-describedby=\"search-box\" />\n        </div>\n    )\n}\nSearchBox.propTypes = {\n    searchByTitle: PropTypes.func.isRequired\n}\nexport default class MapSelector extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n    getComponentValue = () => {\n        return \"It's OK\"\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userMaps, maps, selectedMap } = this.props\n        if (nextProps.userMaps === userMaps && nextProps.maps === maps && selectedMap === nextProps.selectedMap) {\n            return false\n        }\n        return true\n    }\n    handlePageClick = (data) => {\n        const { getMaps } = this.props\n        const selected = data.selected\n        const offset = selected * 9\n        getMaps(offset)\n    }\n    searchByTitle = (event) => {\n        const { search, handleSearchMode, getMaps } = this.props\n        const text = event.target.value\n        if (text !== \"\") {\n            search(text)\n        } else {\n            handleSearchMode(false)\n            getMaps()\n        }\n    }\n    render() {\n        const { loading, selectedMap, selectMap, maps, userMaps, totalMaps, UserMapsChanged, limit, urls, searchEnabled } = this.props\n        return (\n            <div className=\"flex-row\">\n                <div className=\"row row-fix\">\n                    <SearchBox searchByTitle={this.searchByTitle} />\n                </div>\n                <div className=\"row row-fix\">\n                    <UserMapSwitch UserMapsChanged={UserMapsChanged} userMaps={userMaps} />\n                </div>\n                {loading && <Loader />}\n                {!loading && maps.map((map, index) => {\n                    return <MapCard urls={urls} key={index} map={map} selectedMap={selectedMap} selectMap={selectMap} />\n\n                })}\n                {(!loading && !searchEnabled && maps.length == 0 && userMaps) && <div className=\"row\">\n                    <div\n                        className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6 col-md-offset-3 col-lg-offset-3 text-center\">\n                        <h3>{`This Application requires a `}<a href={`${urls.newMap}`}>Map</a>{` and a `}<a href=\"https://docs.qgis.org/2.8/en/docs/training_manual/create_vector_data/create_new_vector.html\">Layer</a>{`. you will need to upload layer.Once you have a Layer you can create a Map with this layer`}</h3>\n                        <hr />\n                        <h3>{\"Alternatively you can work with other Maps and Layers that are shared with you or shared to Public.To view your Shared Maps click the Switcher on the top of page\"}</h3>\n\n                    </div>\n                </div>}\n                {!loading && searchEnabled && maps.length == 0 && <h3 className=\"text-center\">{\"No Maps Found\"}</h3>}\n                {!searchEnabled && <ReactPaginate\n                    previousLabel={\"previous\"}\n                    nextLabel={\"next\"}\n                    breakLabel={< a href=\"javascript:;\" > ...</a>}\n                    breakClassName={\"break-me\"}\n                    pageCount={totalMaps / limit}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={this.handlePageClick}\n                    containerClassName={\"pagination center-div\"}\n                    subContainerClassName={\"pages pagination\"}\n                    activeClassName={\"active\"} />}\n            </div>\n        )\n    }\n}\nMapSelector.propTypes = {\n    maps: PropTypes.array,\n    selectedMap: PropTypes.object,\n    urls: PropTypes.object.isRequired,\n    selectMap: PropTypes.func.isRequired,\n    getMaps: PropTypes.func.isRequired,\n    search: PropTypes.func.isRequired,\n    handleSearchMode: PropTypes.func.isRequired,\n    UserMapsChanged: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    userMaps: PropTypes.bool.isRequired,\n    searchEnabled: PropTypes.bool.isRequired,\n    totalMaps: PropTypes.number.isRequired,\n    limit: PropTypes.number.isRequired,\n}\n","import { getPropertyFromConfig, getSelectOptions } from '../../containers/staticMethods'\n\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { accessFormSchema } from '../../containers/forms'\nimport {\n    getAttributesTemplate\n} from './AutoCompleteInput'\nimport t from 'tcomb-form'\nconst Form = t.form.Form\nexport default class AppAccess extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: this.getFormValue(this.props)\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        const { errors } = this.props\n        if (nextProps.errors !== errors) {\n            return false\n        }\n        return true\n    }\n    flattenedUsers = (users) => {\n        return users.map(obj => obj.value)\n    }\n    getFormValueForSaving = (value) => {\n        let data = {}\n        Object.keys(value).map(attr => {\n            const attributeValue = value[attr]\n            data[attr] = attributeValue ? this.flattenedUsers(attributeValue) : null\n        })\n        return data\n    }\n    getComponentValue = () => {\n        let value = this.form.getValue()\n        if (value) {\n            value = this.getFormValueForSaving(value)\n        }\n        return value\n    }\n    onChange = (newValue) => {\n        this.setState({ value: newValue })\n    }\n    getAccess\n    getFormValue = (props) => {\n        const { config } = props\n        const viewAccess = getPropertyFromConfig(config ? config.access :\n            null, 'whoCanView', null)\n        const metadataAccess = getPropertyFromConfig(config ?\n            config.access : null, 'whoCanChangeMetadata',\n            null)\n        const deleteAccess = getPropertyFromConfig(config ? config.access :\n            null, 'whoCanDelete', null)\n        const changeAccess = getPropertyFromConfig(\n            config ? config.access : null,\n            'whoCanChangeConfiguration', null)\n        const value = {\n            whoCanView: viewAccess?getSelectOptions(viewAccess):viewAccess,\n            whoCanChangeMetadata: metadataAccess?getSelectOptions(metadataAccess):metadataAccess,\n            whoCanDelete:  deleteAccess?getSelectOptions(deleteAccess):deleteAccess,\n            whoCanChangeConfiguration: changeAccess?getSelectOptions(changeAccess):changeAccess,\n        }\n        return value\n    }\n    getFormOptions = () => {\n        const { profiles } = this.props\n        const userOptions = getSelectOptions(profiles, 'username')\n        const options = {\n            fields: {\n                whoCanView: {\n                    factory: t.form.Textbox,\n                    template: getAttributesTemplate({\n                        options: userOptions,\n                        message: \"Select Users or empty for anyone\"\n                    })\n                },\n                whoCanChangeMetadata: {\n                    factory: t.form.Textbox,\n                    template: getAttributesTemplate({\n                        options: userOptions,\n                        message: \"Select Users or empty for owner(you) only\"\n                    })\n                },\n                whoCanDelete: {\n                    factory: t.form.Textbox,\n                    template: getAttributesTemplate({\n                        options: userOptions,\n                        message: \"Select Users or empty for owner(you) only\"\n                    })\n                },\n                whoCanChangeConfiguration: {\n                    factory: t.form.Textbox,\n                    template: getAttributesTemplate({\n                        options: userOptions,\n                        message: \"Select Users or empty for owner(you) only\"\n                    })\n                },\n            }\n        }\n        return options\n    }\n    render() {\n        return (\n            <div>\n                <h3>{\"Access Configuration\"}</h3>\n                <Form\n                    ref={(form) => this.form = form}\n                    value={this.state.value}\n                    type={accessFormSchema()}\n                    onChange={this.onChange}\n                    options={this.getFormOptions()} />\n            </div>\n        )\n    }\n}\nAppAccess.propTypes = {\n    config: PropTypes.object,\n    loading: PropTypes.bool.isRequired,\n    profiles: PropTypes.array.isRequired,\n    errors: PropTypes.array.isRequired,\n}\n","import t from 'tcomb-form'\nexport const generalFormSchema = () => {\n    const selectKeywordItem = t.struct({\n        value: t.String,\n        label: t.String\n    })\n    const formSchema = t.struct({\n        title: t.String,\n        abstract: t.maybe(t.String),\n        keywords: t.list(selectKeywordItem)\n    })\n    return formSchema\n}\nexport const accessFormSchema = () => {\n    const selectUserItem = t.struct({\n        value: t.String,\n        label: t.String\n    })\n    const formSchema = t.struct({\n        whoCanView: t.maybe(t.list(selectUserItem)),\n        whoCanChangeMetadata: t.maybe(t.list(selectUserItem)),\n        whoCanDelete: t.maybe(t.list(selectUserItem)),\n        whoCanChangeConfiguration: t.maybe(t.list(selectUserItem))\n    })\n    return formSchema\n}\nexport const bookmarksFormSchema = () => {\n    const selectUserItem = t.struct({\n        name: t.String,\n        extent: t.String\n    })\n    const formSchema = t.struct({\n        bookmarks: t.maybe(t.list(selectUserItem)),\n    })\n    return formSchema\n}\nexport const toolFormSchema = () => {\n    const formSchema = t.struct({\n        enableHistory: t.Boolean,\n        enableFeatureTable: t.Boolean,\n        showLayerSwitcher: t.Boolean,\n        showExportMap: t.Boolean,\n        showLegend: t.Boolean\n    })\n    return formSchema\n}\n\nexport const geocodingFormSchema = () => {\n    const formSchema = t.struct({\n        boundlessGeoCodingEnabled: t.maybe(t.Boolean),\n        geocodingKey: t.maybe(t.String),\n    })\n    return formSchema\n}","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { geocodingFormSchema } from 'Source/containers/forms'\nimport { getPropertyFromConfig } from 'Source/containers/staticMethods'\nimport t from 'tcomb-form'\n// import { geocodinglFormSchema } from '../../containers/forms';\nconst Form = t.form.Form\nexport default class GeocodingConfiguration extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: this.getFormValue(this.props)\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        const { errors } = this.props\n        if (nextProps.errors !== errors) {\n            return false\n        }\n        return true\n    }\n    getComponentValue = () => {\n        const value = this.form.getValue()\n        return value\n    }\n    // componentWillReceiveProps(nextProps) {\n    //     const { selectedMap, config,instanceId } = this.props\n    //     if (((selectedMap !== nextProps.selectedMap) || config)&& !instanceId) {\n    //         this.setState({ value: this.getFormValue(nextProps) })\n    //     }\n    // }\n    onChange = (newValue) => {\n        this.setState({ value: newValue })\n    }\n    getFormValue = (props) => {\n        const { config } = props\n        const value = {\n            boundlessGeoCodingEnabled: config ? config.boundlessGeoCodingEnabled : false,\n            geocodingKey: config ? config.geocodingKey : null,\n        }\n        return value\n    }\n    getFormOptions = () => {\n        const options = {\n            fields: {\n                boundlessGeoCodingEnabled: {\n                    label: \"Enable Boundless GeoCoding Service\"\n                },\n                geocodingKey: {\n                    label: \"Key\",\n                    disabled: !this.state.value.boundlessGeoCodingEnabled ? true : false,\n                },\n            }\n        }\n        return options\n    }\n    render() {\n        return (\n            <div>\n                <h3>{\"Boundless Geocoding\"}</h3>\n                <Form\n                    ref={(form) => this.form = form}\n                    value={this.state.value}\n                    type={geocodingFormSchema()}\n                    onChange={this.onChange} />\n            </div>\n        )\n    }\n}\nGeocodingConfiguration.propTypes = {\n    config: PropTypes.object,\n    errors: PropTypes.array.isRequired,\n    instanceId:PropTypes.number\n}","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { generalFormSchema } from 'Source/containers/forms'\nimport {\n    getKeywordsTemplate\n} from './AutoCompleteInput'\nimport { getPropertyFromConfig } from 'Source/containers/staticMethods'\nimport t from 'tcomb-form'\nconst Form = t.form.Form\nexport default class AppConfiguration extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: this.getFormValue(this.props)\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        const { errors } = this.props\n        if (nextProps.errors !== errors) {\n            return false\n        }\n        return true\n    }\n    getKeywordsOptions = (input, callback) => {\n        const { allKeywords } = this.props\n        let keywordsOptions = []\n        allKeywords.forEach(keyword => {\n            keywordsOptions.push({\n                label: keyword.name,\n                value: keyword.name,\n            })\n        })\n        callback(null, {\n            options: keywordsOptions,\n            complete: true\n        })\n    }\n    getComponentValue = () => {\n        const value = this.form.getValue()\n        return value\n    }\n    componentWillReceiveProps(nextProps) {\n        const { selectedMap, config,instanceId } = this.props\n        if (((selectedMap !== nextProps.selectedMap) || config)&& !instanceId) {\n            this.setState({ value: this.getFormValue(nextProps) })\n        }\n    }\n    onChange = (newValue) => {\n        this.setState({ value: newValue })\n    }\n    keywordsToOptions=(keywords)=>{\n        let options=[]\n        keywords.map(keyword=>{\n            options.push({value:keyword,label:keyword})\n        })\n        return options\n    }\n    getFormValue = (props) => {\n        const { title, selectedMap, abstract, config } =\n            props\n        const value = {\n            title: title ? title : selectedMap ? selectedMap.title : null,\n            abstract: abstract ? abstract : selectedMap ?\n                selectedMap.abstract : null,\n            keywords: this.keywordsToOptions(getPropertyFromConfig(config, 'keywords',[]))\n        }\n        return value\n    }\n    getFormOptions = () => {\n        const options = {\n            fields: {\n                title: {\n                    label: \"App Title\"\n                },\n                keywords: {\n                    factory: t.form.Textbox,\n                    template: getKeywordsTemplate({\n                        loadOptions: this.getKeywordsOptions,\n                        message: \"Select or Enter a Keyword\"\n                    })\n                }\n            }\n        }\n        return options\n    }\n    render() {\n        return (\n            <div>\n                <h3>{\"General Configuration\"}</h3>\n                <Form\n                    ref={(form) => this.form = form}\n                    value={this.state.value}\n                    type={generalFormSchema()}\n                    onChange={this.onChange}\n                    options={this.getFormOptions()} />\n            </div>\n        )\n    }\n}\nAppConfiguration.propTypes = {\n    allKeywords: PropTypes.array.isRequired,\n    selectedMap: PropTypes.object,\n    config: PropTypes.object,\n    title: PropTypes.string,\n    abstract: PropTypes.string,\n    errors: PropTypes.array.isRequired,\n    instanceId:PropTypes.number\n}","import InfoModal from './InfoModal'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport classNames from 'classnames'\nconst ActionBar = (props) => {\n    const { save, selectedMap, instanceId, urls, saving, validate } = props\n    const extraProps = {\n        disabled: selectedMap && !saving ? false : true\n    }\n    return (\n        <div className=\"action-bar\">\n            <div className=\"grow\"></div>\n            <div>\n                {saving && <i className=\"fa fa-circle-o-notch fa-spin fa-lg fa-fw\"></i>}\n            </div>\n            <p>\n                <button onClick={save} className=\"btn btn-primary btn-sm pull-right\" {...extraProps}>{\"Save\"}</button>\n            </p>\n            {/* <p>\n                <button onClick={validate} className=\"btn btn-primary btn-sm pull-right\" {...extraProps}>{\"Validate\"}</button>\n            </p> */}\n            <p>\n                {instanceId && <a href={urls.viewURL(instanceId)} className=\"btn btn-sm btn-primary pull-right\">{\"View\"}</a>}\n            </p>\n        </div>\n    )\n}\nActionBar.propTypes = {\n    save: PropTypes.func.isRequired,\n    validate: PropTypes.func.isRequired,\n    selectedMap: PropTypes.object,\n    instanceId: PropTypes.number,\n    saving: PropTypes.bool.isRequired,\n    urls: PropTypes.object.isRequired\n}\nconst Tabs = (props) => {\n    const {\n        childrenProps,\n        getTabClassName,\n        checkIfDisabled,\n        getContentClassName\n    } = props\n    return (\n        <div>\n            <div className=\"col-xs-12 col-sm-12 col-md-3 col-lg-3\">\n                <ul className=\"nav nav-pills nav-stacked cartoview-nav-list\">\n                    {childrenProps.steps.map((step, index) => {\n                        const disabled = checkIfDisabled(step)\n                        return (\n                            <li key={index} className={getTabClassName(index)}>\n                                <a disabled={disabled} data-toggle={disabled ? \"\" : \"tab\"} className=\"fill-empty\" href={disabled ? \"javascript:;\" : `#component-${index}`}>\n                                    <span>{step.title}</span>\n                                    {step.hasError && <i className=\"fa fa-exclamation-triangle text-danger pull-right\" aria-hidden=\"true\"></i>}\n                                </a>\n                                \n                            </li>\n\n                        )\n                    })}\n                </ul>\n            </div>\n            <div className=\"col-xs-12 col-sm-12 col-md-9 col-lg-9\">\n                <div className=\"tab-content\">\n                    {childrenProps.steps.map((step, index) => {\n                        return (\n                            <div key={index} id={`component-${index}`} className={getContentClassName(index)}>\n                                <step.component errors={childrenProps.errors} ref={ComponentRef => childrenProps.setStepRef(step.ref, ComponentRef)} urls={childrenProps.urls} {...step.props} />\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\nTabs.propTypes = {\n    childrenProps: PropTypes.object.isRequired,\n    getTabClassName: PropTypes.func.isRequired,\n    checkIfDisabled: PropTypes.func.isRequired,\n    getContentClassName: PropTypes.func.isRequired,\n}\nconst AppBar = (props) => {\n    const { handleHideModal } = props\n    return (\n        <div className=\"flex-element full-width\">\n            <div className=\"grow\">\n                <h1>{\"BasicViewer\"}</h1>\n            </div>\n            <div className=\"text-center\">\n                <h1>\n                    <button onClick={handleHideModal} className=\"btn btn-primary\">\n                        <i className=\"fa fa-question-circle fa-lg\" aria-hidden=\"true\"></i>\n                    </button>\n                </h1>\n            </div>\n        </div>\n    )\n}\nAppBar.propTypes = {\n    handleHideModal: PropTypes.func.isRequired\n}\nexport default class EditPageComponent extends React.Component {\n    state = {\n        showModal: false\n    }\n    checkIfDisabled = (index) => {\n        const { childrenProps } = this.props\n        return (!childrenProps.selectedMap) ? index === 0 ? false : true : false\n    }\n    getTabClassName = (index) => {\n        const check = this.checkIfDisabled(index)\n        return classNames({\n            disabled: check,\n            active: index === 0,\n            \"nav-item\": true,\n            \"flex-element\": true,\n\n        })\n    }\n    handleHideModal = () => {\n        const { showModal } = this.state\n        this.setState({ showModal: !showModal })\n    }\n    getContentClassName = (index) => {\n        return classNames({\n            \"active\": index === 0,\n            \"tab-pane fade in\": true\n        })\n    }\n    render() {\n        const { childrenProps } = this.props\n        let { showModal } = this.state\n        return (\n            <div className=\"base\">\n                <AppBar handleHideModal={this.handleHideModal} />\n                <ActionBar validate={childrenProps.validate} saving={childrenProps.saving} urls={childrenProps.urls} save={childrenProps.save} selectedMap={childrenProps.selectedMap} instanceId={childrenProps.instanceId} />\n                <div className=\"row content\">\n                    <Tabs childrenProps={childrenProps} checkIfDisabled={this.checkIfDisabled} getContentClassName={this.getContentClassName} getTabClassName={this.getTabClassName} />\n                </div>\n                {showModal && <InfoModal handleHideModal={this.handleHideModal} />}\n            </div>\n        )\n    }\n}\nEditPageComponent.propTypes = {\n    childrenProps: PropTypes.object.isRequired\n}\n","import isURL from 'validator/lib/isURL'\nexport const getPropertyFromConfig = (config, property, defaultValue) => {\n    const propertyValue = config && typeof (config[property]) !==\n        \"undefined\" ? config[property] : defaultValue\n    const nestedPropertyValue = config && config.config && typeof (config\n        .config[property]) !== \"undefined\" ? config.config[\n        property] : propertyValue\n    return nestedPropertyValue\n}\nexport const checkURL = (value) => {\n    /* validator validate strings only */\n    if (typeof (value) === \"string\") {\n        return isURL(value)\n    }\n    return false\n}\nexport const checkImageSrc = (src, good, bad) => {\n    let img = new Image()\n    img.onload = good\n    img.onerror = bad\n    img.src = src\n}\nexport const getSelectOptions = (arr, label = null, value = null) => {\n    let options = []\n    if (arr && arr.length > 0) {\n        options = arr.map(item => {\n            if (!label) {\n                return { value: item, label: item }\n            }\n            return {\n                value: item[label], label: item[value ?\n                    value : label]\n            }\n        })\n    }\n    return options\n}","import 'ol/ol.css'\n\nimport BasicViewerHelper from 'cartoview-sdk/helpers/BasicViewerHelper'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport classNames from 'classnames'\nimport { getPropertyFromConfig } from 'Source/containers/staticMethods'\n\nexport default class Bookmarks extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            bookmarks: this.getFormValue(this.props),\n            map: BasicViewerHelper.getMap(),\n            showMap: false\n        }\n        global.map=this.state.map\n    }\n    getComponentValue = () => {\n        return { bookmarks: this.state.bookmarks }\n    }\n    getFormValue = (props) => {\n        const { config } = props\n        const value = getPropertyFromConfig(config,\n            'bookmarks', [])\n        return value\n    }\n    componentDidMount = () => {\n        let { map } = this.state\n        map.setTarget(this.mapDiv)\n\n    }\n    componentWillReceiveProps(nextProps) {\n        const { config, instanceId } = this.props\n\n        if (config && !instanceId) {\n            this.setState({ bookmarks: this.getFormValue(nextProps) })\n        }\n\n    }\n    showMap = () => {\n        this.setState({ showMap: !this.state.showMap }, () => {\n            this.state.map.updateSize()\n            this.state.map.render()\n        })\n    }\n    addBookmark = () => {\n        const { bookmarks, map } = this.state\n        let newBookmarks = []\n        newBookmarks.push({\n            name: 'New Bookmark', extent: map.getView().calculateExtent().join('/')\n        })\n        const newValue = [...bookmarks, ...newBookmarks]\n        this.setState({ bookmarks: newValue })\n\n\n    }\n    onChange = index => event => {\n        const { bookmarks } = this.state\n        let newBookmarks = [...bookmarks]\n        let editedOne = newBookmarks[index]\n        editedOne.name = event.target.value\n        newBookmarks.splice(index, 1, editedOne)\n        this.setState({ bookmarks: newBookmarks })\n    }\n    onDescriptionChange = index => event => {\n        const { bookmarks } = this.state\n        let newBookmarks = [...bookmarks]\n        let editedOne = newBookmarks[index]\n        editedOne.description = event.target.value\n        newBookmarks.splice(index, 1, editedOne)\n        this.setState({ bookmarks: newBookmarks })\n    }\n    removeBookmark = (index) => {\n        const { bookmarks } = this.state\n        let newBookmarks = [...bookmarks]\n        newBookmarks.splice(index, 1)\n        this.setState({ bookmarks: newBookmarks })\n    }\n    render() {\n        const { showMap, bookmarks } = this.state\n        return (\n            <div>\n                <h3>{\"Bookmarks\"}</h3>\n                <div id=\"map\" ref={(mapDiv) => this.mapDiv = mapDiv} className={classNames(\"bookmarks-map\", { 'hidden': !showMap })}></div>\n                <hr />\n                <div className=\"bookmark-item\">\n                    <button onClick={this.showMap} className='btn btn-primary'>{`${showMap ? 'Hide' : 'Show'} Map`}</button>\n                    {showMap && <button onClick={this.addBookmark} className='btn btn-primary'>{`add Bookmark`}</button>}\n                </div>\n                {bookmarks.map((bookmark, index) => {\n                    return <div key={index} className='bookmark-item'>\n                        <div className=\"form-group\">\n                            <label htmlFor={`name${index}`}>{\"Name: \"}</label>\n                            <input onChange={this.onChange(index)} type=\"text\" className=\"form-control\" value={bookmark.name} id={`name${index}`} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor={`description${index}`}>{\"Description: \"}</label>\n                            <input onChange={this.onDescriptionChange(index)} type=\"text\" className=\"form-control\" value={bookmark.description} id={`description${index}`} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor={`extent${index}`}>{\"Extent: \"}</label>\n                            <input disabled={true} type=\"text\" className=\"form-control\" value={bookmark.extent} id={`extent${index}`} />\n                        </div>\n                        <div>\n                            <button onClick={() => this.removeBookmark(index)} className={\"btn btn-danger\"}>{'Remove'}</button>\n                        </div>\n                    </div>\n                })}\n            </div>\n        )\n    }\n}\nBookmarks.propTypes = {\n    config: PropTypes.object,\n    instanceId: PropTypes.number\n}\n","import Img from 'react-image'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport Spinner from 'react-spinkit'\n\nexport const MapCard = (props) => {\n    const { selectMap, map, selectedMap, urls } = props\n    return (\n        <div\n            onClick={() => selectMap(map)}\n            key={map.id}\n            className={ selectedMap && (selectedMap.id === map.id)\n                ? \"row row-fix resource-box bg-success\"\n                : \"row row-fix resource-box\"}>\n\n            <div className=\"col-xs-12 col-sm-4 col-md-4 col-lg-4 resource-box-img-container\">\n                <Img\n                    className=\"resource-box-img\"\n                    src={[map.thumbnail_url, urls.noImage]}\n                    loader={< Spinner name=\"line-scale-pulse-out\" color=\"steelblue\" />} />\n            </div>\n\n            <div className=\"col-xs-12 col-sm-8 col-md-8 col-lg-8 resource-box-text title-wrap\">\n                <h4 className=\"title-wrap\">{map.title}</h4>\n                <p className=\"title-wrap\">\n                    {map.abstract}\n                </p>\n                <small>owner: {map.owner__username}</small><br />\n                <a type=\"button\"\n                    href={urls.mapDetails(map.id)}\n                    target=\"_blank\"\n                    className=\"btn btn-primary map-details-button\">\n                    {'Details'}\n                </a>\n            </div>\n        </div>\n    )\n}\nMapCard.propTypes = {\n    selectMap: PropTypes.func.isRequired,\n    map: PropTypes.object.isRequired,\n    selectedMap: PropTypes.object,\n    urls: PropTypes.object.isRequired\n}","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types'\n\nexport default class InfoModal extends Component {\n    constructor(props) {\n        super(props)\n    }\n    componentDidMount() {\n        $(this.modal).modal('show')\n        $(this.modal).on('hidden.bs.modal', this.props.handleHideModal)\n    }\n    render() {\n        return (\n            <div ref={(modalRef) => this.modal = modalRef} className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                            <h4 className=\"modal-title\">{\"Cartoview BasicViewer\"}</h4>\n                        </div>\n                        <div className=\"modal-body\">\n                            <p>\n                                {\"General purpose map viewer with only the essential compoonents for navigation and display. Optimized for mobile. Using Openlayers 3 and Boundless SDK\"}\n                            </p>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nInfoModal.propTypes = {\n    handleHideModal: PropTypes.func.isRequired,\n}\n"],"sourceRoot":""}